Date-29/09/2023
class Solution {

    int numberOfEnclaves(int[][] grid) {
        int n=grid.length;int m=grid[0].length;
        Queue<Pair> q=new LinkedList<>();
        boolean[][] vis=new boolean[n][m];
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(i==0 || j==0 || i==n-1|| j==m-1){
                    if(grid[i][j]==1){
                        q.add(new Pair(i,j));
                        vis[i][j]=true;
                    }
                }
            }
        }
        
        int delRow[]={0,-1,0,1};
        int delCol[]={-1,0,1,0};
        while(!q.isEmpty()){
            Pair curr=q.poll();
            int r=curr.row;
            int c=curr.col;
            for(int i=0;i<4;i++){
                int newR=r+delRow[i];
                int newC=c+delCol[i];
                if(newR>=0 && newR<n && newC>=0 && newC<m && !vis[newR][newC] && grid[newR][newC]==1){
                    q.add(new Pair(newR,newC));
                    vis[newR][newC]=true;
                }
            }
        }
        
        int cnt=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
            
                if(grid[i][j]==1 && !vis[i][j]){
                    cnt++;
                }
                
            }}
        return cnt;
    }
    
    static class Pair{
        int row;
        int col;
        Pair(int r,int c){
            row=r;
            col=c;
        }
    }
}
