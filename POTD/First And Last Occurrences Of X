Date-22/09/23
class GFG
{
    ArrayList<Integer> find(int arr[], int n, int x)
    {
    ArrayList<Integer> ans=new ArrayList<Integer>();
    int l=firstOccurence(arr,n,x);
    if(l==-1){
        ans.add(-1);
        ans.add(-1);
        return ans;
    }
    else{
    int r=lastOccurence(arr,n,x);
    ans.add(l);
    ans.add(r);
    return ans;}
    }
    
    int firstOccurence(int[] arr,int n,int x){
        int i=0;int j=n-1;
        if(arr[i]<=x){
        while(i<=j){
            int m=(i+j)/2;
            if(arr[m]<x){
                i=m+1;
            }
            else if(arr[m]>x)
            j=m-1;
            else{
                if(m==0 || arr[m-1]!=arr[m]){
                return m;}
                else
                j=m-1;
            }
            
        }
            
        }
        return -1;
    }
    
    int lastOccurence(int[] arr,int n,int x){
        int i=0;int j=n-1;
        if(arr[j]>=x){
        while(i<=j){
            int m=(i+j)/2;
            if(arr[m]<x){
                i=m+1;
            }
            else if(arr[m]>x)
            j=m-1;
            else{
                if(m==j || arr[m+1]!=arr[m]){
                return m;}
                else
                i=m+1;
                
            }
            }
        }
            
            
        return -1;
    }
}
